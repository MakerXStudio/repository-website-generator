{"pageProps":{"markdown":"[@makerx/ts-object-mother-public-website](/code-docs.md) / [pages/\\_document](/modules/pages__document.md) / default\n\n\n\n[pages/_document](/modules/pages__document.md).default\n\n## Hierarchy\n\n- `default`\n\n  ↳ **`default`**\n\n## Table of contents\n\n### Constructors\n\n- [constructor](/classes/pages__document.default.md#constructor)\n\n### Properties\n\n- [context](/classes/pages__document.default.md#context)\n- [props](/classes/pages__document.default.md#props)\n- [refs](/classes/pages__document.default.md#refs)\n- [state](/classes/pages__document.default.md#state)\n- [contextType](/classes/pages__document.default.md#contexttype)\n\n### Methods\n\n- [UNSAFE\\_componentWillMount](/classes/pages__document.default.md#unsafe_componentwillmount)\n- [UNSAFE\\_componentWillReceiveProps](/classes/pages__document.default.md#unsafe_componentwillreceiveprops)\n- [UNSAFE\\_componentWillUpdate](/classes/pages__document.default.md#unsafe_componentwillupdate)\n- [componentDidCatch](/classes/pages__document.default.md#componentdidcatch)\n- [componentDidMount](/classes/pages__document.default.md#componentdidmount)\n- [componentDidUpdate](/classes/pages__document.default.md#componentdidupdate)\n- [componentWillMount](/classes/pages__document.default.md#componentwillmount)\n- [componentWillReceiveProps](/classes/pages__document.default.md#componentwillreceiveprops)\n- [componentWillUnmount](/classes/pages__document.default.md#componentwillunmount)\n- [componentWillUpdate](/classes/pages__document.default.md#componentwillupdate)\n- [forceUpdate](/classes/pages__document.default.md#forceupdate)\n- [getSnapshotBeforeUpdate](/classes/pages__document.default.md#getsnapshotbeforeupdate)\n- [render](/classes/pages__document.default.md#render)\n- [setState](/classes/pages__document.default.md#setstate)\n- [shouldComponentUpdate](/classes/pages__document.default.md#shouldcomponentupdate)\n- [getInitialProps](/classes/pages__document.default.md#getinitialprops)\n\n## Constructors\n\n### constructor\n\n• **new default**(`props`)\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `props` | `RenderPageResult` & { `styles?`: `ReactFragment` \\| `ReactElement`<`any`, `string` \\| `JSXElementConstructor`<`any`\\>\\>[]  } & `HtmlProps` \\| `Readonly`<`RenderPageResult` & { `styles?`: `ReactFragment` \\| `ReactElement`<`any`, `string` \\| `JSXElementConstructor`<`any`\\>\\>[]  } & `HtmlProps`\\> |\n\n#### Inherited from\n\nDocument.constructor\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:472\n\n• **new default**(`props`, `context`)\n\n**`deprecated`**\n\n**`see`** https://reactjs.org/docs/legacy-context.html\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `props` | `RenderPageResult` & { `styles?`: `ReactFragment` \\| `ReactElement`<`any`, `string` \\| `JSXElementConstructor`<`any`\\>\\>[]  } & `HtmlProps` |\n| `context` | `any` |\n\n#### Inherited from\n\nDocument.constructor\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:477\n\n## Properties\n\n### context\n\n• **context**: `unknown`\n\nIf using the new style context, re-declare this in your class to be the\n`React.ContextType` of your `static contextType`.\nShould be used with type annotation or static contextType.\n\n```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```\n\n**`see`** https://reactjs.org/docs/context.html\n\n#### Inherited from\n\nDocument.context\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:470\n\n___\n\n### props\n\n• `Readonly` **props**: `Readonly`<`RenderPageResult` & { `styles?`: `ReactFragment` \\| `ReactElement`<`any`, `string` \\| `JSXElementConstructor`<`any`\\>\\>[]  } & `HtmlProps`\\>\n\n#### Inherited from\n\nDocument.props\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:490\n\n___\n\n### refs\n\n• **refs**: `Object`\n\n**`deprecated`**\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n\n#### Index signature\n\n▪ [key: `string`]: `ReactInstance`\n\n#### Inherited from\n\nDocument.refs\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:496\n\n___\n\n### state\n\n• **state**: `Readonly`<{}\\>\n\n#### Inherited from\n\nDocument.state\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:491\n\n___\n\n### contextType\n\n▪ `Static` `Optional` **contextType**: `Context`<`any`\\>\n\nIf set, `this.context` will be set at runtime to the current value of the given Context.\n\nUsage:\n\n```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```\n\n**`see`** https://reactjs.org/docs/context.html#classcontexttype\n\n#### Inherited from\n\nDocument.contextType\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:453\n\n## Methods\n\n### UNSAFE\\_componentWillMount\n\n▸ `Optional` **UNSAFE_componentWillMount**(): `void`\n\nCalled immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n**`deprecated`** 16.3, use componentDidMount or the constructor instead\n\n**`see`** https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state\n\n**`see`** https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n\n#### Returns\n\n`void`\n\n#### Inherited from\n\nDocument.UNSAFE\\_componentWillMount\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:687\n\n___\n\n### UNSAFE\\_componentWillReceiveProps\n\n▸ `Optional` **UNSAFE_componentWillReceiveProps**(`nextProps`, `nextContext`): `void`\n\nCalled when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n**`deprecated`** 16.3, use static getDerivedStateFromProps instead\n\n**`see`** https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props\n\n**`see`** https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `nextProps` | `Readonly`<`RenderPageResult` & { `styles?`: `ReactFragment` \\| `ReactElement`<`any`, `string` \\| `JSXElementConstructor`<`any`\\>\\>[]  } & `HtmlProps`\\> |\n| `nextContext` | `any` |\n\n#### Returns\n\n`void`\n\n#### Inherited from\n\nDocument.UNSAFE\\_componentWillReceiveProps\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:719\n\n___\n\n### UNSAFE\\_componentWillUpdate\n\n▸ `Optional` **UNSAFE_componentWillUpdate**(`nextProps`, `nextState`, `nextContext`): `void`\n\nCalled immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n**`deprecated`** 16.3, use getSnapshotBeforeUpdate instead\n\n**`see`** https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update\n\n**`see`** https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `nextProps` | `Readonly`<`RenderPageResult` & { `styles?`: `ReactFragment` \\| `ReactElement`<`any`, `string` \\| `JSXElementConstructor`<`any`\\>\\>[]  } & `HtmlProps`\\> |\n| `nextState` | `Readonly`<{}\\> |\n| `nextContext` | `any` |\n\n#### Returns\n\n`void`\n\n#### Inherited from\n\nDocument.UNSAFE\\_componentWillUpdate\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:747\n\n___\n\n### componentDidCatch\n\n▸ `Optional` **componentDidCatch**(`error`, `errorInfo`): `void`\n\nCatches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount.\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `error` | `Error` |\n| `errorInfo` | `ErrorInfo` |\n\n#### Returns\n\n`void`\n\n#### Inherited from\n\nDocument.componentDidCatch\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:616\n\n___\n\n### componentDidMount\n\n▸ `Optional` **componentDidMount**(): `void`\n\nCalled immediately after a component is mounted. Setting state here will trigger re-rendering.\n\n#### Returns\n\n`void`\n\n#### Inherited from\n\nDocument.componentDidMount\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:595\n\n___\n\n### componentDidUpdate\n\n▸ `Optional` **componentDidUpdate**(`prevProps`, `prevState`, `snapshot?`): `void`\n\nCalled immediately after updating occurs. Not called for the initial render.\n\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `prevProps` | `Readonly`<`RenderPageResult` & { `styles?`: `ReactFragment` \\| `ReactElement`<`any`, `string` \\| `JSXElementConstructor`<`any`\\>\\>[]  } & `HtmlProps`\\> |\n| `prevState` | `Readonly`<{}\\> |\n| `snapshot?` | `any` |\n\n#### Returns\n\n`void`\n\n#### Inherited from\n\nDocument.componentDidUpdate\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:658\n\n___\n\n### componentWillMount\n\n▸ `Optional` **componentWillMount**(): `void`\n\nCalled immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n**`deprecated`** 16.3, use componentDidMount or the constructor instead; will stop working in React 17\n\n**`see`** https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state\n\n**`see`** https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n\n#### Returns\n\n`void`\n\n#### Inherited from\n\nDocument.componentWillMount\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:673\n\n___\n\n### componentWillReceiveProps\n\n▸ `Optional` **componentWillReceiveProps**(`nextProps`, `nextContext`): `void`\n\nCalled when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n**`deprecated`** 16.3, use static getDerivedStateFromProps instead; will stop working in React 17\n\n**`see`** https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props\n\n**`see`** https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `nextProps` | `Readonly`<`RenderPageResult` & { `styles?`: `ReactFragment` \\| `ReactElement`<`any`, `string` \\| `JSXElementConstructor`<`any`\\>\\>[]  } & `HtmlProps`\\> |\n| `nextContext` | `any` |\n\n#### Returns\n\n`void`\n\n#### Inherited from\n\nDocument.componentWillReceiveProps\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:702\n\n___\n\n### componentWillUnmount\n\n▸ `Optional` **componentWillUnmount**(): `void`\n\nCalled immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`.\n\n#### Returns\n\n`void`\n\n#### Inherited from\n\nDocument.componentWillUnmount\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:611\n\n___\n\n### componentWillUpdate\n\n▸ `Optional` **componentWillUpdate**(`nextProps`, `nextState`, `nextContext`): `void`\n\nCalled immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n\n**`deprecated`** 16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17\n\n**`see`** https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update\n\n**`see`** https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `nextProps` | `Readonly`<`RenderPageResult` & { `styles?`: `ReactFragment` \\| `ReactElement`<`any`, `string` \\| `JSXElementConstructor`<`any`\\>\\>[]  } & `HtmlProps`\\> |\n| `nextState` | `Readonly`<{}\\> |\n| `nextContext` | `any` |\n\n#### Returns\n\n`void`\n\n#### Inherited from\n\nDocument.componentWillUpdate\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:732\n\n___\n\n### forceUpdate\n\n▸ **forceUpdate**(`callback?`): `void`\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `callback?` | () => `void` |\n\n#### Returns\n\n`void`\n\n#### Inherited from\n\nDocument.forceUpdate\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:487\n\n___\n\n### getSnapshotBeforeUpdate\n\n▸ `Optional` **getSnapshotBeforeUpdate**(`prevProps`, `prevState`): `any`\n\nRuns before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `prevProps` | `Readonly`<`RenderPageResult` & { `styles?`: `ReactFragment` \\| `ReactElement`<`any`, `string` \\| `JSXElementConstructor`<`any`\\>\\>[]  } & `HtmlProps`\\> |\n| `prevState` | `Readonly`<{}\\> |\n\n#### Returns\n\n`any`\n\n#### Inherited from\n\nDocument.getSnapshotBeforeUpdate\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:652\n\n___\n\n### render\n\n▸ **render**(): `Element`\n\n#### Returns\n\n`Element`\n\n#### Overrides\n\nDocument.render\n\n#### Defined in\n\n[pages/_document.tsx:5](https://github.com/MakerXStudio/repository-website-generator/blob/7d5ab9e/pages/_document.tsx#L5)\n\n___\n\n### setState\n\n▸ **setState**<`K`\\>(`state`, `callback?`): `void`\n\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `K` | extends `never` |\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `state` | ``null`` \\| {} \\| (`prevState`: `Readonly`<{}\\>, `props`: `Readonly`<`RenderPageResult` & { `styles?`: `ReactFragment` \\| `ReactElement`<`any`, `string` \\| `JSXElementConstructor`<`any`\\>\\>[]  } & `HtmlProps`\\>) => ``null`` \\| {} \\| `Pick`<{}, `K`\\> \\| `Pick`<{}, `K`\\> |\n| `callback?` | () => `void` |\n\n#### Returns\n\n`void`\n\n#### Inherited from\n\nDocument.setState\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:482\n\n___\n\n### shouldComponentUpdate\n\n▸ `Optional` **shouldComponentUpdate**(`nextProps`, `nextState`, `nextContext`): `boolean`\n\nCalled to determine whether the change in props and state should trigger a re-render.\n\n`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `nextProps` | `Readonly`<`RenderPageResult` & { `styles?`: `ReactFragment` \\| `ReactElement`<`any`, `string` \\| `JSXElementConstructor`<`any`\\>\\>[]  } & `HtmlProps`\\> |\n| `nextState` | `Readonly`<{}\\> |\n| `nextContext` | `any` |\n\n#### Returns\n\n`boolean`\n\n#### Inherited from\n\nDocument.shouldComponentUpdate\n\n#### Defined in\n\nnode_modules/@types/react/index.d.ts:606\n\n___\n\n### getInitialProps\n\n▸ `Static` **getInitialProps**(`ctx`): `Promise`<`DocumentInitialProps`\\>\n\n`getInitialProps` hook returns the context object with the addition of `renderPage`.\n`renderPage` callback executes `React` rendering logic synchronously to support server-rendering wrappers\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `ctx` | `DocumentContext` |\n\n#### Returns\n\n`Promise`<`DocumentInitialProps`\\>\n\n#### Inherited from\n\nDocument.getInitialProps\n\n#### Defined in\n\nnode_modules/next/dist/pages/_document.d.ts:25\n","title":"# Class: default","pages":[]},"__N_SSG":true}